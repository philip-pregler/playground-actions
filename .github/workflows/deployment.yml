name: Deployment

on:
  push:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.200'

      - name: Display .NET version
        run: dotnet --version

      - name: Install dependencies
        run: |
          dotnet restore webapi/webapi.csproj
          dotnet restore webapi.test/webapi.test.csproj

      - name: Build
        run: |
          dotnet build --no-restore webapi/webapi.csproj
          dotnet build --no-restore webapi.test/webapi.test.csproj

      - name: Set up Docker Buildx
        id: buildx
        uses: docker-practice/actions-setup-buildx@master
        with:
          version: latest

      - name: Start DynamoDB
        run: |
          ${{ steps.buildx.outputs.docker_container }} run -d --name dynamodb -p 8000:8000 amazon/dynamodb-local -jar DynamoDBLocal.jar -sharedDb -inMemory -noVerifySSL

      - name: Verify DynamoDB connection
        run: |
          # Warte 30 Sekunden, damit DynamoDB Zeit hat, vollst채ndig zu starten
          sleep 30
          # F체hre einen manuellen Test durch, um die DynamoDB-Verbindung zu 체berpr체fen
          curl http://localhost:8000

      - name: Run tests
        run: |
          dotnet test --no-build --verbosity normal --logger trx --collect "Code coverage" webapi.test/webapi.test.csproj
          if [ $? -ne 0 ]; then
            echo "Tests failed. Printing test results:"
            dotnet test --no-build --verbosity normal --logger console --collect "Code coverage" webapi.test/webapi.test.csproj
          fi
        env:
          DYNAMODB_ENDPOINT: http://localhost:8000
        continue-on-error: true